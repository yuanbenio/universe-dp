default:
  desc: help
  cmds:
    - task -l

install_docker:
  desc: install docker
  cmds:
      - sudo curl -sSL https://get.daocloud.io/docker | sudo sh
      - sudo groupadd docker
      - sudo gpasswd -a ${USER} docker
      - sudo service docker restart
      - sudo newgrp - docker

deps:
  desc: check deps
  cmds:
    - which docker || task install_docker
    - which docker-compose || sudo pip install docker-compose
    - task login
    - task pull

login:
  desc: login
  cmds:
    - docker login --username=ybl.common@yuanben --password=Usx14K3d1!3kd registry.cn-hangzhou.aliyuncs.com

pro:
  desc: init production project
  cmds:
    - task pull
    - sudo rm -rf kdata
    - cp -r pro kdata
    - sudo docker run --rm -v `pwd`/kdata:/kdata universe-chain init
    - sudo chmod 755 `pwd`/kdata/config/priv_validator.json

dev:
  desc: init dev project
  cmds:
    - task pull
    - sudo rm -rf kdata
    - cp -r dev kdata
    - sudo docker run --rm -v `pwd`/kdata:/kdata universe-chain init
    - sudo chmod 755 `pwd`/kdata/config/priv_validator.json

s:
  desc: start container
  cmds:
    - docker-compose up -d
    - docker-compose logs -f

ss:
  desc: restart container
  cmds:
    - task pull
    - docker-compose stop
    - docker-compose rm -f
    - docker-compose up -d
    - docker-compose logs -f

d:
  desc: remove container
  cmds:
    - docker-compose stop
    - docker-compose rm -f

log:
  desc: print logs
  cmds:
    - docker-compose logs -f

ls:
  desc: show containers
  cmds:
    - docker-compose ps

kchain:
  desc: start Yuanben Chain node (need to modify ports by config.toml)
  cmds:
    - docker run -dit --restart=always --name=kchain --log-driver=json-file --log-opt max-size=20m --log-opt max-file=50 -p port1:port1 -p port2:port2 -v `pwd`/kdata:/kdata universe-chain
    - docker logs -f kchain

kchain_reset:
  desc: reset DB and config properties
  cmds:
    - sudo docker run --rm -v `pwd`/kdata:/kdata kchain unsafe_reset_all

kchain_restart:
  desc: restart Yuanben Chain node
  cmds:
    - docker rm -f kchain
    - task kchain

rm_none:
  desc: remove none images
  cmds:
    - sudo docker images | grep none | awk '{print $3}' | xargs docker rmi -f

pull:
  desc: pull images
  cmds:
    - git pull
    - sudo docker pull registry.cn-hangzhou.aliyuncs.com/yuanben/universe-chain:latest
    - docker tag registry.cn-hangzhou.aliyuncs.com/yuanben/universe-chain:latest universe-chain

    - sudo docker pull registry.cn-hangzhou.aliyuncs.com/yuanben/knode
    - docker tag registry.cn-hangzhou.aliyuncs.com/yuanben/knode knode